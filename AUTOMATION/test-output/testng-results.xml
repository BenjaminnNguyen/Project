<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="109295" started-at="2021-04-01T15:30:58Z" finished-at="2021-04-01T15:32:47Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="109295" started-at="2021-04-01T15:30:58Z" finished-at="2021-04-01T15:32:47Z">
      <class name="excute.TC01">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:excute.TC01@11dc3715]" name="beforeMethod" is-config="true" duration-ms="10472" started-at="2021-04-01T22:30:58Z" finished-at="2021-04-01T22:31:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="tc()[pri:0, instance:excute.TC01@11dc3715]" name="tc" duration-ms="95548" started-at="2021-04-01T22:31:09Z" finished-at="2021-04-01T22:32:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Qua thoi gian nhung khong thay hoac thay doi tuong Given xpath expression "[[FirefoxDriver: firefox on WINDOWS (51b5f2d7-59f9-4db2-9110-23abbda714bc)] -> xpath: //*[text()='Apple iPhone 11 A2111 64/128/256GB Unlocked Brand New']/../..//div[1][@class='s-item__detail s-item__detail--primary']/span]" is invalid: SyntaxError: The expression is not a legal expression.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'PC', ip: '192.168.52.101', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 87.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210318103112, moz:geckodriverVersion: 0.27.0, moz:headless: false, moz:processID: 2668, moz:profile: C:\Users\BAO\AppData\Local\..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 6.1, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 51b5f2d7-59f9-4db2-9110-23abbda714bc
*** Element info: {Using=xpath, value=[[FirefoxDriver: firefox on WINDOWS (51b5f2d7-59f9-4db2-9110-23abbda714bc)] -> xpath: //*[text()='Apple iPhone 11 A2111 64/128/256GB Unlocked Brand New']/../..//div[1][@class='s-item__detail s-item__detail--primary']/span]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Qua thoi gian nhung khong thay hoac thay doi tuong Given xpath expression "[[FirefoxDriver: firefox on WINDOWS (51b5f2d7-59f9-4db2-9110-23abbda714bc)] -> xpath: //*[text()='Apple iPhone 11 A2111 64/128/256GB Unlocked Brand New']/../..//div[1][@class='s-item__detail s-item__detail--primary']/span]" is invalid: SyntaxError: The expression is not a legal expression.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'PC', ip: '192.168.52.101', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 87.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210318103112, moz:geckodriverVersion: 0.27.0, moz:headless: false, moz:processID: 2668, moz:profile: C:\Users\BAO\AppData\Local\..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 6.1, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 51b5f2d7-59f9-4db2-9110-23abbda714bc
*** Element info: {Using=xpath, value=[[FirefoxDriver: firefox on WINDOWS (51b5f2d7-59f9-4db2-9110-23abbda714bc)] -> xpath: //*[text()='Apple iPhone 11 A2111 64/128/256GB Unlocked Brand New']/../..//div[1][@class='s-item__detail s-item__detail--primary']/span]}
	at org.testng.Assert.fail(Assert.java:94)
	at common.CommonBase.checkCycling(CommonBase.java:367)
	at common.CommonBase.getDisplayedElement(CommonBase.java:262)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getDisplayedElement(CommonBase.java:264)
	at common.CommonBase.getElementPresent(CommonBase.java:389)
	at common.CommonBase.getText(CommonBase.java:719)
	at excute.TC01.tc(TC01.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:excute.TC01@11dc3715]" name="afterMethod" is-config="true" duration-ms="3242" started-at="2021-04-01T22:32:44Z" finished-at="2021-04-01T22:32:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- excute.TC01 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
